grammar = {
    "Programa": [["ListaDados", "ListaComandos"]],
    "Tipo": [["Primitivos", "SufixoTipo"]],
    "Primitivos": [["int"], ["float"], ["string"], ["bool"]],
    "SufixoTipo": [["[", "]"], ["ε"]],
    "ListaDados": [["Dado", "ListaDados"], ["ε"]],
    "Dado": [["$id", "<", "Tipo", ">", "AtribuicaoVariavel", ";"]],
    "AtribuicaoVariavel": [["OPERADOR_ATRIB", "Expr"], ["ε"]],

    "ListaComandos": [["Comando", "ListaComandos"], ["ε"]],
    "Comando": [
        ["Atribuicao"],
        ["if", "(", "Expr", ")", "Comando", "RestoIf"],
        ["while", "(", "Expr", ")", "Comando"],
        ["for", "(", "ForInit", ";", "Expr", ";", "Atribuicao", ")"],
        ["{", "ListaComandos", "}"],
        ["read", "(", "id", ")", ";"],
        ["print", "(", "string", "PRINT_TAIL", ")", ";"]
    ],

    "PRINT_TAIL": [["+", "Factor", "PRINT_TAIL"], ["ε"]],
    "RestoIf": [["else", "Comando"], ["ε"]],
    "Atribuicao": [["$id", "OPERADOR_ATRIB", "Expr"]],
    "ForInit": [["Dado"], ["Atribuicao"]],

    "OPERADOR_LOGICO": [["!="], ["<"], [">"], ["=="], [">="], ["<="]],
    "OPERADOR_ATRIB": [["="], ["+="], ["-="], ["*="], ["/="], ["%="]],

    "Expr": [["ExpressaoAritmetica", "ExprR"]],
    "ExprR": [["OPERADOR_LOGICO", "ExpressaoAritmetica"], ["ExprPrime"]],
    "ExprPrime": [["AddOp", "Term", "ExprPrime"], ["ε"]],
    "AddOp": [["+"], ["-"]],

    "ExpressaoAritmetica": [["Term", "ExprPrime"]],
    "Term": [["Factor", "TermPrime"]],
    "TermPrime": [["MulOp", "Factor", "TermPrime"], ["ε"]],
    "MulOp": [["*"], ["/"], ["%"]],

    "Factor": [
        ["(", "Expr", ")"],
        ["$id"],
        ["num"],
        ["string"],
        ["bool"],
        ["AtrRead"],
        ["ArrayLiteral"],
        ["IndexAccess"]
    ],
    "bool": [["true"], ["false"]],
    "ArrayLiteral": [["{", "ListaExpr", "}"]],
    "IndexAccess": [["$id", "[", "Expr", "]"]],
    "ListaExpr": [["Expr", "ListaExprTail"], ["ε"]],
    "ListaExprTail": [[",", "Expr", "ListaExprTail"], ["ε"]],
    "AtrRead": [["read", "(", "string", ")"]],
    "int": [["[0-9]+"]],
    "float": [["[+-]?[0-9]+(\\.[0-9]+)?"]],
    "id": [["\\$?[a-zA-Z_][a-zA-Z0-9_]*"]],
    "string": [["\"([^\"\\n])*\""]],
    "Comentario": [['>>>[^\\n]*']]
}

grammar = {
    "E": [["T", "E'"]],
    "E'": [["V", "T", "E'"], ["ε"]],
    "T": [["F", "T'"]],
    "T'": [["∩", "F", "T'"], ["ε"]],
    "F": [["~", "F"], ["id"]]
}

grammar = {
    "decl": [["atrib-decl"], ["ativ-decl"], ["outra"]],
    "atrib-decl": [["id", ":=", "exp"]],
    "ativ-decl": [["id(exp-list)"]],
}